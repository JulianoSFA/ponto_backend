# Generated by Django 3.1.13 on 2021-11-04 19:04

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=60)),
                ('middle_name', models.CharField(blank=True, default=None, max_length=60, null=True)),
                ('last_name', models.CharField(max_length=60)),
                ('username', models.CharField(blank=True, default=None, max_length=60, unique=True, verbose_name='CPF')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('dob', models.DateField(blank=True, default=None, null=True)),
                ('is_email_verified', models.BooleanField(blank=True, default=False)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos que este usuário pertence. Um usuário terá todas as permissões concedidas a cada um dos seus grupos.', related_name='user_groups', related_query_name='user', to='auth.Group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas para este usuário.', related_name='user_permissions', related_query_name='user', to='auth.Permission', verbose_name='permissões do usuário')),
            ],
            options={
                'verbose_name': 'Account',
                'db_table': 'users',
                'ordering': ['-id'],
            },
        ),
    ]
